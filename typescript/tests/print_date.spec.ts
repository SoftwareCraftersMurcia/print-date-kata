import PrintDate from "../src/print_date";
import Calendar from "../src/calendar";
import Printer from "../src/printer";

describe("Test suite", () => {
  let calendar: Calendar, printer: Printer, printDate: PrintDate
  
  beforeEach(() => {
    calendar = new Calendar();
    printer = new Printer();
    printDate = new PrintDate(calendar, printer);
  })

  it("is working", () => {
    printDate.printCurrentDate();
  });

  it("should call printLine", () => {
    jest.spyOn(printer, 'printLine');
    printDate.printCurrentDate();
    expect(printer.printLine).toHaveBeenCalled();
  })

  it("should call calendar today", () => {
    jest.spyOn(calendar, 'today');
    printDate.printCurrentDate();
    expect(calendar.today).toHaveBeenCalled();
  })

  it('should pass to the printed the date generated by calendar', () => {
    const expectedDate = new Date()
    calendar.today = jest.fn().mockReturnValue(expectedDate)
    jest.spyOn(printer, 'printLine');
    printDate.printCurrentDate();
    expect(printer.printLine).toHaveBeenCalledWith(expectedDate.toString());
  })
});
