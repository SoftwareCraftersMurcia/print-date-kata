import PrintDate from "../src/print_date";
import Calendar from "../src/calendar";
import Printer from "../src/printer";

describe("Test suite", () => {
  let calendar: Calendar, printer: Printer, printDate: PrintDate

  describe("Sociable", () => {

    beforeEach(() => {
      calendar = new Calendar();
      printer = new Printer();
      printDate = new PrintDate(calendar, printer);
    })

    it("is working", () => {
      printDate.printCurrentDate();
    });


    it('should pass to the printed the date generated by calendar', () => {
      const expectedDate = new Date()
      calendar.today = jest.fn().mockReturnValue(expectedDate)
      printer.printLine = jest.fn()
      printDate.printCurrentDate();
      expect(printer.printLine).toHaveBeenCalledWith(expectedDate.toString());
    })
  })

  describe("Solitary", () => {
    beforeEach(() => {
      calendar = new Calendar();
      printer = new Printer();
      printDate = new PrintDate(calendar, printer);
    })

    xit('should pass to the printed the date generated by calendar', () => {
      const expectedDate = new Date()
      printDate.printCurrentDate();
      expect(printer.printLine).toHaveBeenCalledWith(expectedDate.toString());
    })
  })
});
